---
# file: tasks/version-2/build_flow.yml

- name: prepare buildFlow variables
  set_fact:
    project_name: "{{ buildFlowName.project_name|replace('-','_') }}"
    project_name_config: "{{ buildFlowName.project_name|replace('-','_')|lower() }}"
    gitRepository: '{{ buildFlowName.gitRepository }}'
    git_project_branches:
      - master
      - develop
      - feature-0
- name: prepare variables
  set_fact:
    cicd_file: '/opt/{{ project_name_config }}.done'
    envAuthorDispatchers: []
    envPublishDispatchers: []

- name: check if cicd has been already created
  stat:
    path: '{{ cicd_file }}'
  register: cicd_done

- block:
  - name: 'create and run {{ project_name }}_Generate job'
    include: "{{ tasks_version_path }}/subtasks/create-and-run-job.yml generate_job={{ project_name }}_Generate job_te\
mplate={{ job_version_template_link }}/jobs/Project_Generate"

  - name:  dispatchers related profiles
    include: '{{ tasks_version_path }}/prepare-dispatcher.yml'

  - name: 'check Jenkinsfile for {{ project_name }} Project'
    template:
      src: '{{ job_version_template_link }}/Jenkinsfile.j2'
      dest: '{{ jenkins_home }}/workspace/{{ project_name }}_Generate/{{ project_name_config }}/Jenkinsfile'
      owner: '{{ jenkins_user }}'
    become: True

  - name: run git workflow backbone generation
    include: '{{ tasks_version_path }}/create-git-branch.yml'
    with_items: '{{ git_project_branches }}'
    loop_control:
      loop_var: gitBranchItem
  - name: 'remove {{ project_name }}_Generate job'
    include: '{{ tasks_version_path }}/subtasks/remove-job.yml job_to_remove={{ project_name }}_Generate'
  - name: 'create BuildFlow multibranch for {{ project_name }} project'
    include: '{{ tasks_base_path }}/create-job.yml job_name={{ project_name }}_BuildFlow job_template={{ job_version_template_link }}/jobs/BuildFlow'
  - name: 'create Counter job for {{ project_name }} project'
    include: '{{ tasks_base_path }}/create-job.yml job_name={{ project_name }}_BuildCounter job_template={{ job_version_template_link }}/jobs/Counter'
  - name: 'create Deployment jobs for {{ project_name }} project'
    include: '{{ tasks_base_path }}/create-job.yml job_name={{ project_name }}_Deploy job_template={{ job_version_template_link }}/jobs/Deploy'
  - name: save successfull installation in file
    file:
      path: '{{ cicd_file }}'
      state: touch
    become: True
  when: not cicd_done.stat.exists
